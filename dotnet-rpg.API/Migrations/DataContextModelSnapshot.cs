// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnet_rpg.API.Data;

#nullable disable

namespace dotnetrpg.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("CharacterSkill", b =>
                {
                    b.Property<int>("CharactersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharactersId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("CharacterSkill");

                    b.HasData(
                        new
                        {
                            CharactersId = 1,
                            SkillsId = 1
                        },
                        new
                        {
                            CharactersId = 2,
                            SkillsId = 2
                        },
                        new
                        {
                            CharactersId = 2,
                            SkillsId = 3
                        });
                });

            modelBuilder.Entity("dotnet_rpg.API.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defeats")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defense")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fights")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HitPoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Strength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Victories")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 1,
                            Defeats = 0,
                            Defense = 10,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 10,
                            Name = "Lancelot",
                            Strength = 15,
                            UserId = 2,
                            Victories = 0
                        },
                        new
                        {
                            Id = 2,
                            Class = 3,
                            Defeats = 0,
                            Defense = 10,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 15,
                            Name = "Gandalf",
                            Strength = 10,
                            UserId = 3,
                            Victories = 0
                        });
                });

            modelBuilder.Entity("dotnet_rpg.API.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 30,
                            Name = "Fireball"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 20,
                            Name = "Frenzy"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 50,
                            Name = "Blizzard"
                        });
                });

            modelBuilder.Entity("dotnet_rpg.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 176, 104, 247, 201, 224, 83, 68, 208, 121, 91, 189, 24, 131, 239, 217, 170, 48, 193, 152, 113, 60, 158, 84, 95, 97, 245, 156, 34, 109, 48, 237, 150, 180, 163, 155, 189, 101, 9, 82, 123, 135, 114, 64, 113, 252, 164, 14, 80, 77, 35, 60, 216, 110, 174, 157, 63, 102, 99, 91, 185, 147, 62, 208, 96 },
                            PasswordSalt = new byte[] { 249, 30, 112, 192, 213, 252, 4, 178, 20, 33, 152, 164, 204, 127, 47, 218, 20, 180, 147, 243, 235, 31, 32, 33, 57, 157, 121, 18, 208, 254, 175, 9, 4, 112, 17, 180, 87, 17, 228, 50, 235, 20, 134, 187, 93, 9, 109, 133, 83, 148, 50, 174, 130, 161, 201, 12, 39, 239, 96, 156, 195, 230, 92, 89, 179, 58, 120, 73, 91, 117, 200, 115, 43, 75, 94, 233, 124, 70, 203, 50, 76, 83, 121, 221, 173, 253, 152, 53, 229, 181, 1, 103, 123, 166, 187, 236, 169, 173, 127, 152, 221, 240, 250, 184, 139, 85, 188, 223, 142, 135, 107, 115, 103, 179, 114, 241, 64, 188, 111, 46, 160, 202, 210, 76, 105, 88, 125, 249 },
                            Username = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 176, 104, 247, 201, 224, 83, 68, 208, 121, 91, 189, 24, 131, 239, 217, 170, 48, 193, 152, 113, 60, 158, 84, 95, 97, 245, 156, 34, 109, 48, 237, 150, 180, 163, 155, 189, 101, 9, 82, 123, 135, 114, 64, 113, 252, 164, 14, 80, 77, 35, 60, 216, 110, 174, 157, 63, 102, 99, 91, 185, 147, 62, 208, 96 },
                            PasswordSalt = new byte[] { 249, 30, 112, 192, 213, 252, 4, 178, 20, 33, 152, 164, 204, 127, 47, 218, 20, 180, 147, 243, 235, 31, 32, 33, 57, 157, 121, 18, 208, 254, 175, 9, 4, 112, 17, 180, 87, 17, 228, 50, 235, 20, 134, 187, 93, 9, 109, 133, 83, 148, 50, 174, 130, 161, 201, 12, 39, 239, 96, 156, 195, 230, 92, 89, 179, 58, 120, 73, 91, 117, 200, 115, 43, 75, 94, 233, 124, 70, 203, 50, 76, 83, 121, 221, 173, 253, 152, 53, 229, 181, 1, 103, 123, 166, 187, 236, 169, 173, 127, 152, 221, 240, 250, 184, 139, 85, 188, 223, 142, 135, 107, 115, 103, 179, 114, 241, 64, 188, 111, 46, 160, 202, 210, 76, 105, 88, 125, 249 },
                            Username = "Joueur1"
                        },
                        new
                        {
                            Id = 3,
                            PasswordHash = new byte[] { 176, 104, 247, 201, 224, 83, 68, 208, 121, 91, 189, 24, 131, 239, 217, 170, 48, 193, 152, 113, 60, 158, 84, 95, 97, 245, 156, 34, 109, 48, 237, 150, 180, 163, 155, 189, 101, 9, 82, 123, 135, 114, 64, 113, 252, 164, 14, 80, 77, 35, 60, 216, 110, 174, 157, 63, 102, 99, 91, 185, 147, 62, 208, 96 },
                            PasswordSalt = new byte[] { 249, 30, 112, 192, 213, 252, 4, 178, 20, 33, 152, 164, 204, 127, 47, 218, 20, 180, 147, 243, 235, 31, 32, 33, 57, 157, 121, 18, 208, 254, 175, 9, 4, 112, 17, 180, 87, 17, 228, 50, 235, 20, 134, 187, 93, 9, 109, 133, 83, 148, 50, 174, 130, 161, 201, 12, 39, 239, 96, 156, 195, 230, 92, 89, 179, 58, 120, 73, 91, 117, 200, 115, 43, 75, 94, 233, 124, 70, 203, 50, 76, 83, 121, 221, 173, 253, 152, 53, 229, 181, 1, 103, 123, 166, 187, 236, 169, 173, 127, 152, 221, 240, 250, 184, 139, 85, 188, 223, 142, 135, 107, 115, 103, 179, 114, 241, 64, 188, 111, 46, 160, 202, 210, 76, 105, 88, 125, 249 },
                            Username = "Joueur2"
                        });
                });

            modelBuilder.Entity("dotnet_rpg.API.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = 1,
                            Damage = 20,
                            Name = "The Master Sword"
                        },
                        new
                        {
                            Id = 2,
                            CharacterId = 2,
                            Damage = 5,
                            Name = "Crystal Wand"
                        });
                });

            modelBuilder.Entity("CharacterSkill", b =>
                {
                    b.HasOne("dotnet_rpg.API.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dotnet_rpg.API.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("dotnet_rpg.API.Models.Character", b =>
                {
                    b.HasOne("dotnet_rpg.API.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("dotnet_rpg.API.Models.Weapon", b =>
                {
                    b.HasOne("dotnet_rpg.API.Models.Character", "Character")
                        .WithOne("Weapon")
                        .HasForeignKey("dotnet_rpg.API.Models.Weapon", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("dotnet_rpg.API.Models.Character", b =>
                {
                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("dotnet_rpg.API.Models.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
